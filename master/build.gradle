allprojects {
    apply plugin: 'scala'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    ext.scalaMajorVersion = '2.10'
    ext.scalaMinorVersion = '3'
    ext.scalaVersion = "${scalaMajorVersion}.${scalaMinorVersion}"
    ext.json4sVersion = '3.2.5'
    dependencies {
        compile "org.scala-lang:scala-library:${scalaVersion}"
        compile "org.scala-lang:scala-reflect:${scalaVersion}"
//        compile "org.scala-lang:scala-compiler:${scalaVersion}"
    }
}

wrapper {
    gradleVersion '1.8'
}

subprojects { subproject ->
    dependencies {
        compile 'ch.qos.logback:logback-classic:1.0.9'
        testCompile "org.scalatest:scalatest_${scalaMajorVersion}.0:1.8"
        testCompile 'junit:junit-dep:4.11'
    }
}

project(':unfiltered-backend') {
    apply plugin: 'application'
    mainClassName = 'filter.Main'
    
    ext.unfilteredVersion = '0.7.0'

    dependencies {
        compile project(':model')
        compile project(':slick-persistence')
        compile "net.databinder:unfiltered-filter_${scalaMajorVersion}:${unfilteredVersion}"
        compile "net.databinder:unfiltered-jetty_${scalaMajorVersion}:${unfilteredVersion}"
        compile "net.databinder:unfiltered-netty_${scalaMajorVersion}:${unfilteredVersion}"
        compile "net.databinder:unfiltered-directives_${scalaMajorVersion}:${unfilteredVersion}"
    }
}

project(':spray-backend') {
    apply plugin: 'application'
    mainClassName = 'boot.Boot'

    ext.sprayVersion = "1.2-M8"

    dependencies {
        compile project(':model')
        compile project(':slick-persistence')
        compile "io.spray:spray-can:${sprayVersion}"
        compile "io.spray:spray-routing:${sprayVersion}"
        compile "com.typesafe.akka:akka-actor_${scalaMajorVersion}:2.2.0-RC1"
    }
}

project(':scalatra-backend') {
    apply plugin: 'application'
    mainClassName = 'boot.ScalatraBoot'

    ext.scalatraVersion = '2.2.1'
    ext.jettyVersion = '9.0.5.v20130815'

    dependencies {
        compile project(':model')
        compile project(':slick-persistence')
        compile "org.scalatra:scalatra_${scalaMajorVersion}:${scalatraVersion}"
        compile "org.scalatra:scalatra-json_${scalaMajorVersion}:${scalatraVersion}"
        compile "org.json4s:json4s-jackson_${scalaMajorVersion}:${json4sVersion}"
        compile "org.scalatra:scalatra-auth_${scalaMajorVersion}:${scalatraVersion}"
        compile "org.scalatra:scalatra-swagger_${scalaMajorVersion}:${scalatraVersion}"
//        compile "com.wordnik:swagger-core_${scalaMajorVersion}.0:1.2.0"
        compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
        compile "org.eclipse.jetty.orbit:javax.servlet:3.0.0.v201112011016"
        testCompile "org.scalatra:scalatra-specs2_${scalaMajorVersion}:${scalatraVersion}"
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                //specifying a fixed version for all libraries with 'org.eclipse.jetty' group
                if (details.requested.group == 'org.eclipse.jetty') {
                    details.useVersion "${jettyVersion}"
                }
            }
        }
    }
}

project(':slick-persistence') {
    dependencies {
        compile project(':model')
        compile "com.typesafe.slick:slick_${scalaMajorVersion}:1.0.1"
        compile "com.h2database:h2:1.3.170"
        compile 'com.googlecode.flyway:flyway-core:2.2.1'
        compile 'com.jolbox:bonecp:0.7.1.RELEASE'
    }
}

project(':model') {
    dependencies {
        compile "org.json4s:json4s-scalaz_${scalaMajorVersion}:${json4sVersion}"
        compile "org.json4s:json4s-native_${scalaMajorVersion}:${json4sVersion}"
        compile "org.json4s:json4s-ext_${scalaMajorVersion}:${json4sVersion}"
    }
}

